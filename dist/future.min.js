/*! Futurejs 0.2.3 2014-01-17 */
!function(){function a(a){return"undefined"==typeof a}function b(a){return"[object Function]"==Object.prototype.toString.call(a)}function c(a){return"[object Array]"==Object.prototype.toString.call(a)}var d,e=this;d="undefined"!=typeof process&&b(process.nextTick)?process.nextTick:function(a){setTimeout(a,0)};var f=function(c,d){if(!a(c)){var e;e=b(c)?c():c,this._pending=!1,d?(this._withError=!0,this._error=e):this._data=e}this._callbacks=[]};f.value=function(a){return new f(a)},f.sync=function(a){if(!b(a))throw new Error("Future.sync value should be a function");return new f(a)},f.error=function(a){return new f(a,!0)},f.prototype._pending=!0,f.prototype._data=null,f.prototype._error=null,f.prototype._withError=!1,f.prototype._callbacks=null,f.prototype.then=function(c,d){if(!b(c))throw new Error("onValue callback must be a function");var e=d;if(null!=e&&!a(e)&&!b(e)&&(d=d||{},e=d.onError,!b(e)))throw new Error("onError callback must be a function");var g=new f;return this._pending?this._callbacks.push({onValue:c,onError:e,f:g}):this._innerComplete({onValue:c,onError:e,f:g},!0),g},f.prototype.catchError=function(a,b){return this.then(function(){},function(c){if(!b||b(c))return a(c);throw c})},f.prototype.whenComplete=function(a){return this.then(function(b){var c=a();return c instanceof f?c.then(function(){return b}):b},{onError:function(b){var c=a();if(c instanceof f)return c.then(function(){throw b});throw b}})},f.prototype._complete=function(a,b){if(!this._pending)throw new Error("Future already completed");this._pending=!1,this._data=a,this._dispatchCompletion(b)},f.prototype._innerComplete=function(b,c){var d;try{if(this._withError){if(!b.onError)throw this._error;d=b.onError(this._error)}else d=b.onValue(this._data)}catch(e){return b.f._completeError(e,c),void 0}a(d)&&(d=this._data),d instanceof f?d.then(function(a){b.f._complete(a)}).catchError(function(a){b.f._completeError(a)}):b.f._complete(d,c)},f.prototype._completeError=function(a,b){if(!this._pending)throw new Error("Future already completed");this._pending=!1,this._withError=!0,this._error=a,this._dispatchCompletion(b)},f.prototype._dispatchCompletion=function(a){if(a){var b=this;b._pending=!0,d(function(){b._pending=!1,b._actualDispatchCompletion()})}else this._actualDispatchCompletion()},f.prototype._actualDispatchCompletion=function(){var a=this._callbacks.length;if(this._withError&&0==a)throw this._error;for(var b=0;a>b;b++)this._innerComplete(this._callbacks[b])},f.wait=function(a){function b(b){a[b].then(function(a){e--,h[b]=a,0>=e&&d.complete(h)},{onError:function(a){d.isCompleted()||d.completeError(a)}})}if(!c(a))throw new Error("List of futures to wait must be an array, "+a+" given");if(0==a.length)return new f.value([]);for(var d=new g,e=a.length,h=new Array(e),i=0;i<a.length;i++)if(!(a[i]instanceof f))throw new Error(a[i]+" is not a Future");for(var i=0;i<a.length;i++)b(i);return d.future},f.forEach=function(a,b){for(var c=[],d=0;d<a.length;d++){var e=b(a[d]);if(!(e instanceof f))throw new Error("Returned element "+a[d]+" is not a Future");c.push(e)}return this.wait(c)};var g=function(){this.future=new f};g.prototype.future=null,g.prototype.complete=function(a){this.future._complete(a)},g.prototype.completeError=function(a){this.future._completeError(a)},g.prototype.isCompleted=function(){return!this.future._pending},"undefined"!=typeof exports?(module.exports.Future=f,module.exports.Completer=g):"undefined"!=typeof define?define({Future:f,Completer:g}):(e.Future=f,e.Completer=g)}();